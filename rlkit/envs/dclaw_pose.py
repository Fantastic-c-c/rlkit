from robel.dclaw.pose import BaseDClawPose

import numpy as np
from . import register_env


@register_env('dclaw-pose')
class DClawPoseEnv(BaseDClawPose):
    def __init__(self,
                 randomize_tasks=True,
                 n_tasks=5,
                 **kwargs
                 ):
        BaseDClawPose.__init__(self, **kwargs)
        print("RANDOMIZE TASKS? " + str(randomize_tasks))
        if randomize_tasks:
            self.goals = [self._make_random_pose() for _ in range(n_tasks)]
        else:
            # self.goals = [
            #     [0.33216093, -0.34648382, 1.05373163, 0.3457113, -0.75016362, 0.01385098,
            #      0.04234343, -0.35791852, -0.56737231],
            #     [0.21918838, -0.08618355, -0.55813989, -0.46893439, -0.77759893, 0.71962147,
            #      0.23718581, -0.93691183, -1.3277795]
            # ]
            self.goals = [
[0.1413854982556323, -0.03579841484718549, -1.542638807093073, -0.19740901504159114, -0.03997596622533761, 0.4858229103375873, 0.3962754783751221, -1.0191537692171644, 0.24600210205164763], [0.37870834797146924, -0.7741438686975645, -0.6855415554971005, 0.30197843336594077, -0.32830251722701576, -1.0690690613255538, -0.27062551043601585, -0.9212731389396606, 1.263337530908581], [-0.1643543681270982, -0.8451390813046468, -1.2256709629799307, -0.24197050044334645, -1.032404883975908, 0.38435100410215783, -0.463202545425874, -0.31103605953418, 0.09615989177130646], [-0.06297843297536315, -0.7267121709005178, 1.0045350225635508, 0.3671401785093077, -0.7098234017455604, -0.28254884866641006, -0.2888705037645006, -0.26105794062636856, 0.6827460761062478], [-0.1463549491834345, -0.27530754959634196, -0.323577607764314, 0.24290421312538357, -0.36991415933042304, 0.3133351246012175, -0.3121221815951153, -0.7709887329586954, 0.7590568884180726], [0.32321958345753043, -0.10515734006136435, 1.558485360990478, -0.17768553431972167, -0.4485731190086123, -0.348621529805051, 0.17652635107629477, -0.3298195860250669, 1.0159849792876159], [0.4383664182449013, -0.18413874586232604, 1.0963385463627784, 0.2523375793074458, -0.42543403974720706, -0.8461563216546334, 0.3797186746355623, -0.8916793057942597, -0.781676271163382], [-0.30825410114170004, -0.9109822812682793, 1.354091906682128, 0.2299300934324312, -1.0218069476965752, 1.037860509203536, 0.40577019898080335, -0.31732636028273775, 1.4131804129906365], [0.4501675249471213, -0.053535565484460146, 0.5111221661853755, 0.24468755146607124, -0.29133304791104575, 1.2325342738208853, -0.06133412017841727, -0.7274018988547188, -1.5137414462935848], [0.311759622874891, -0.6207530572248976, -1.1496958199135932, 0.4429608899135735, -0.27575869338111547, -0.2320638455734998, 0.07453859388843087, -0.9507819014424346, 1.155077274479292], [-0.3430029273800189, -0.5380090100802548, 1.3457819024156192, -0.19178802896634334, -1.017357097796911, -0.12074537431744337, 0.22025239871494684, -0.9569438244241751, 0.06611632926959965], [0.041265477375313164, -0.8415645322815271, 0.119851703700806, 0.2928002609441721, -0.2620306829582988, 0.5238633961557349, -0.10011619555805779, -0.9620180595243325, -0.10905077377963268], [-0.4791897474899436, -0.7058509503714281, 0.4660652956553948, 0.4432128794662633, -0.8568557783168934, 1.5030112605279458, -0.343582855260605, -0.29437301205253985, 0.631766637292595], [-0.044148589521901205, -0.8012719711944248, -0.7942179158524262, -0.08393802764348957, -0.722451913510111, 1.1608680907811602, -0.04740173734583686, -0.6271467082908313, 0.6761607357295936], [-0.04302423511680731, -1.0188603123622253, 0.8047546966211119, 0.2772613048863999, -0.9245363295657947, 1.2518521225232413, -0.05062705521368177, -0.18269380155007398, 0.14227057242491536], [0.16276033765249553, -0.8238183914556882, -0.48094772016343157, -0.378078061826585, -0.8696838506604938, 0.7164119390831889, -0.32466279460489167, -0.977739117758428, -1.2064630532854057], [-0.441142090486539, -0.8302933090316542, -0.9461608440910151, -0.17556365239745808, -0.5303372146913093, -0.6014426639782363, -0.12390901786924585, -0.020111697437132925, -0.013577930666170301], [-0.3921739661629289, -0.2704428698860263, 0.6560564531177802, -0.4130537707075549, -0.14178319290368635, -1.216235620195583, -0.10580451422503545, -0.8750715159777128, -0.08654505647952182], [0.22913098225839257, -0.8847945472458336, -0.1842535567471304, -0.31887796888214837, -0.7048887285955263, -0.23676483902440282, -0.39616878242440384, -0.44602135935815346, 1.1634116943643535], [0.2982707780068704, -0.3480618283540764, 1.5295214943006994, 0.1922817433959777, -0.46444267736528055, 1.1533989932172166, 0.41400195083511004, -0.5416651544132898, 0.5059312228747515], [0.12564302013745632, -0.5207831999421881, 0.8423582040806781, -0.03843509842684667, -0.2739047368402894, 0.44204159608256033, -0.18936327906609518, -0.05406228246167344, 0.8546928399309381], [-0.4666615782770879, -0.2523711985940156, -0.875327366811655, -0.2523182721728033, -0.5998428469122462, 0.10768894826339048, -0.20530563696096354, -0.2944389927477221, 1.1368683517282498], [0.30348919016307196, -0.06153563177328969, -1.320674826746667, -0.10947669482459482, -0.4910179396159311, -1.0757888242025717, -0.0795719483960185, -0.5996161836067799, -0.8148070490314817], [0.05173361915871333, -0.06179973158636276, 0.24778167257902117, 0.05387409071062976, -0.7720164220444796, 0.4072625971439665, -0.2500233643190889, -0.3907743209869199, -0.9182014827534295], [0.31594738310967685, -0.014065265461147725, -0.43402626489765717, 0.2716508396879851, -0.5376647531147186, 0.5654227686643067, 0.15780999847181365, -0.36277655508097384, -1.4369429892757348], [-0.17048791499733945, -0.9692921438548092, -0.3256935416879294, 0.1741251281259938, -0.11341958953250975, -0.46337323681097264, 0.44253667269155184, -0.8350639087736172, -1.2505013928281092], [0.2347783599889668, -0.23643879067134455, -0.9114510216283256, -0.1105340118091454, -0.4413408972516427, 0.16918309846595814, -0.311113924326046, -0.46765620751848347, 1.482047649344672], [0.16211924463753646, -0.8052668659383415, -0.8891166143368007, 0.012932334393287115, -0.11301553236130235, -1.3957884872099995, -0.11808718240427135, -0.9106101270393416, 1.369839301634598], [-0.052495194577017734, -0.9730685559374065, -0.01036934518329602, 0.15479666508363443, -0.5974537421362781, 0.12239488864514625, 0.46457033240591983, -0.49303825935530987, 1.2923651060861667], [0.06590284243928801, -0.8263138750422327, -0.4315822787874912, -0.3737896813190511, -0.4816559559235052, -1.1715181671954529, 0.2592644792363723, -0.7341699386734963, 0.852785753300954], [0.4162976262075637, -0.003750204093154519, -0.7259841164298166, 0.32643026055805036, -0.9406674536088871, 1.4738061991013045, -0.2538853599653411, -0.1807862488046178, -1.5379402988124182], [-0.17152964401209275, -0.32474912886495644, 0.03911788525628568, 0.34467032779240614, -0.6442908453712677, -0.8181090240139491, 0.319826741277357, -0.1203510623304509, -0.015340674634568563], [0.18962002833903313, -0.3775984489914668, -0.1188478057781801, -0.009392599136573976, -0.19622005146895827, -0.8587011407526924, -0.07116041270475754, -0.04615968451034136, -1.5466179496508687], [-0.21142452668261086, -0.5672247162044786, 1.192727810550834, 0.048371836071273266, -0.4692806340066761, -0.5205414801281734, -0.07702361360697024, -0.4359970165117917, 1.185178671795772], [-0.09655134119479575, -0.40604820046056755, 0.39403544052730477, 0.4267195923476712, -0.9158475999658128, 0.8243639708932271, 0.30441884028231214, -0.7036299519315912, -0.7510588775950747], [0.2842711185307567, -0.9291711760323893, -0.08607999809780997, 0.12947830857565634, -0.7342113293983951, -1.3073061494713842, -0.1775427886903942, -0.5987502438901533, -1.4256980566319004], [-0.3153074881441337, -0.95027917000679, 0.1411390477882548, -0.027335322017345398, -0.9892752956871808, 0.002843819822925031, 0.13102222209844983, -0.31975841626659285, -0.7176000637574883], [0.05206906887685481, -0.8797656973185817, -1.1869425367177762, -0.26166590027453684, -0.7926146786921017, -1.3021642754317204, 0.21320331349044286, -0.9640998807863648, -1.1922108485596747], [-0.18224388748225734, -0.7836133924537572, 0.5521136254573951, 0.16187158326051565, -0.9951845417617893, 1.489772877060369, -0.1153599931723755, -0.7228033572108143, -0.9437802294438774], [-0.29742623967421644, -0.8324307673789555, 1.26601362376099, 0.47370178218570447, -0.1743514762715127, 0.8839546276877814, -0.33273831250234676, -0.6264804695176067, 0.4868989984523302]
            ]
        self.goals = self.goals[:n_tasks]
        print(np.array(self.goals).tolist())
        assert len(self.goals) == n_tasks, "The number of goals should equal the number of tasks"
        self.reset_task(0)  # should this be random?

    def get_all_task_idx(self):
        return range(len(self.goals))

    def get_goal(self):
        return self._desired_pos

    def reset_task(self, idx):
        self._desired_pos = self.goals[idx]
        self.reset()

    def get_tasks(self):
        return self.goals
